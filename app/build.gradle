apply plugin: 'com.android.application'


static def buildTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.jetpack"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName buildTime()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
//        debug {
//            storeFile file('/Users/duxiaolei/Documents/platform.keystore')
//            storePassword STORE_PASSWORD
//            keyAlias 'androiddebugkey'
//            keyPassword KEY_PASSWORD
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.debug
//            manifestPlaceholders = [
//                    icon: "@mipmap/ic_launcher_release",
//                    app_name: "@string/app_name_release",
//                    roundIcon: "@mipmap/ic_launcher_round_release"
//            ]
        }

        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
//            signingConfig signingConfigs.debug
//            manifestPlaceholders = [
//                    icon: "@mipmap/ic_launcher",
//                    app_name: "@string/app_name_debug",
//                    roundIcon: "@mipmap/ic_launcher_round"
//            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            def buildTypeNum = "0"
            if (variant.buildType.name == "release")
                buildTypeNum = "0"
            else
                buildTypeNum = "1"
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "app_v${defaultConfig.versionName}_${buildTime()}_${buildTypeNum}_${variant.name}.apk"
                println "The apk file name is " + fileName
                outputFileName = fileName
            }

        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'




    // 解决Didn't find class "android.view.View$OnUnhandledKeyEventListener" log输出
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == "androidx.appcompat") {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "1.+"
                }
            }
        }
    }

}